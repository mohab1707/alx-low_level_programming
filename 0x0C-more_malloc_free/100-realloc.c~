#include "main.h"
#include <stdio.h>
#include <stdlib.h>

/**
 * _realloc - Reallocates a memory block
 * using malloc and free
 * @ptr: A pointer to the memory previously
 * allocated with malloc
 * @old_size: The size, in bytes, of the
 * allocated space for ptr
 * @new_size: The new size, in bytes, of the
 * new memory block
 *
 * Return: A pointer to the newly allocated
 * memory block
 *         NULL if new_size is equal to zero
 * and ptr is not NULL, or if malloc fails
 */
void *_realloc(void *ptr, unsigned int old_size, unsigned int new_size)
{
void *new_ptr;
unsigned int copy_size;
if (new_size == old_size)
{
return (ptr);
}
if (ptr == NULL)
{
new_ptr = malloc(new_size);
if (new_ptr == NULL)
{
return (NULL);
}
return (new_ptr);
}
if (new_size == 0)
{
free(ptr);
return (NULL);
}
new_ptr = malloc(new_size);
if (new_ptr == NULL)
{
return (NULL);
}
copy_size = (old_size < new_size) ? old_size : new_size;
for (unsigned int i = 0; i < copy_size; i++)
{
*((char *)new_ptr + i) = *((char *)ptr + i);
}
free(ptr);
return (new_ptr);
}
